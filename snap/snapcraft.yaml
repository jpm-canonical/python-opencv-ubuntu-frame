name: python-ui-frame
version: "0.0.1"
summary: A simple Python UI to test Ubuntu Frame
description: Show an OpenCV QT GUI
license: MIT

confinement: strict
grade: stable
base: core24

apps:
  python-ui-frame:
    command-chain:
      - bin/gpu-2404-wrapper
      - bin/wayland-launch
      - bin/setup-mir
      - bin/setup-x11
      - usr/bin/mir-x11-kiosk-launch
    command: bin/python3 $SNAP/show-ui.py
    plugs:
      - opengl
      - wayland
      - network-bind # For Mir (to serve X11)

  glxgears:
    command-chain:
      - bin/gpu-2404-wrapper
      - bin/wayland-launch
      - bin/setup-mir
      - bin/setup-x11
      - usr/bin/mir-x11-kiosk-launch
    command: usr/bin/glxgears
    plugs:
      - opengl
      - wayland
      - network-bind

plugs:
  gpu-2404:
    interface: content
    target: $SNAP/gpu-2404
    default-provider: mesa-2404

# We need the mir-x11-kiosk package from the Mir PPA
package-repositories:
  - type: apt
    ppa: mir-team/dev

environment:
  # Other, generally useful environment settings...
  # XDG config
  XDG_CACHE_HOME: $SNAP_USER_COMMON/.cache
  XDG_CONFIG_HOME: $SNAP_USER_DATA/.config
  XDG_CONFIG_DIRS: $SNAP/etc/xdg
  XDG_DATA_DIRS: $SNAP/usr/local/share:$SNAP/usr/share
  # XKB config
  XKB_CONFIG_ROOT: $SNAP/usr/share/X11/xkb

# The `layout` ensures that files can be found by applications where they are expected by the toolkit or application.
layout:
  /usr/share/libdrm:
    bind: $SNAP/gpu-2404/libdrm
  /usr/share/drirc.d:
    symlink: $SNAP/gpu-2404/drirc.d
  # X11
  /usr/bin/xkbcomp:
    symlink: $SNAP/usr/bin/xkbcomp
  /usr/share/X11:
    bind: $SNAP/usr/share/X11

parts:
  # Add our Python application
  python-source:
    plugin: python
    source: .
    python-packages:
      - opencv-python
    stage-packages:
      - python3
      - libgl1
      - libice6
      - libsm6
    override-build: |
      craftctl default
      cp show-ui.py $CRAFT_PART_INSTALL/
      cp grace_hopper.bmp $CRAFT_PART_INSTALL/

  # Add an example X11 application
  glxgears:
    plugin: nil
    stage-packages:
      - mesa-utils

  # A simple kiosk for X11 on Wayland
  mir-x11-kiosk:
    plugin: nil
    stage-packages:
      - mir-x11-kiosk
      - dmz-cursor-theme
      - xkb-data

  # Some utility scripts for setting up the X11/Mir
  env-setup:
    plugin: dump
    source: env-setup
    override-build: |
      sed --in-place s/\$\{CRAFT_ARCH_TRIPLET}/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/g $CRAFT_PART_BUILD/bin/*
      craftctl default

  # Some utility scripts for setting up the Wayland environment
  setup:
    plugin: dump
    source: wayland-launch
    override-build: |
      # The plugs needed to run Wayland. (wayland-launch checks them, setup.sh connects them)
      # You may add further plugs here if you want these options
      PLUGS="opengl wayland gpu-2404 network-bind"
      sed --in-place "s/%PLUGS%/$PLUGS/g" $CRAFT_PART_BUILD/bin/wayland-launch
      sed --in-place "s/%PLUGS%/$PLUGS/g" $CRAFT_PART_BUILD/bin/setup.sh
      craftctl default
    stage-packages:
      - inotify-tools

  gpu-2404:
    after:
      # The graphics-core22 or gpu-2404 part needs to run after adding your own code,
      # as this part does some cleanup. Without it we saw library version mismatches.
      - python-source
      - glxgears
      - mir-x11-kiosk
      - env-setup
      - setup
    source: https://github.com/canonical/gpu-snap.git
    plugin: dump
    override-prime: |
      craftctl default
      ${CRAFT_PART_SRC}/bin/gpu-2404-cleanup mesa-2404
    prime:
      - bin/gpu-2404-wrapper

platforms:
  amd64:
  arm64:
  armhf:
